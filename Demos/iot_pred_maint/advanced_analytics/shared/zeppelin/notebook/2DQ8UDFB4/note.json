{
  "paragraphs": [
    {
      "title": "Documenting with Zeppelin",
      "text": "%md\n\nUse the buttons on the top right corner of this note to show/hide the editor. You will see that this note is actually a markdown \"program\" that, when run, will hide the editor and display only the output. If you want to change the content, you just have to ask to see the editor and change it.\n\nYou can also ask to see the Title of the note so you can add a title to ANY note on your notebook (not only the markdown ones).",
      "user": "anonymous",
      "dateUpdated": "Sep 14, 2018 11:43:43 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eUse the buttons on the top right corner of this note to show/hide the editor. You will see that this note is actually a markdown \u0026ldquo;program\u0026rdquo; that, when run, will hide the editor and display only the output. If you want to change the content, you just have to ask to see the editor and change it.\u003c/p\u003e\n\u003cp\u003eYou can also ask to see the Title of the note so you can add a title to ANY note on your notebook (not only the markdown ones).\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536256119909_-1338889290",
      "id": "20180906-174839_656699039",
      "dateCreated": "Sep 6, 2018 5:48:39 PM",
      "dateStarted": "Sep 14, 2018 11:43:43 AM",
      "dateFinished": "Sep 14, 2018 11:43:44 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Loading data into IRIS",
      "text": "%spark.pyspark\n\nproducts \u003d spark.read.option(\"header\", \"true\").csv(\"/shared/products.csv\")\n\n#z.show(products)\n\nproducts.write.format(\"iris\").option(\"dbtable\",\"IRISDemo.products2\").option(\"isolationlevel\",\"NONE\").mode(\"OVERWRITE\").save()\n",
      "user": "anonymous",
      "dateUpdated": "Sep 11, 2018 12:24:21 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1536668258272_542946350",
      "id": "20180911-121738_826491648",
      "dateCreated": "Sep 11, 2018 12:17:38 PM",
      "dateStarted": "Sep 11, 2018 12:23:52 PM",
      "dateFinished": "Sep 11, 2018 12:23:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Generic JDBC Interpreter for Apache Zeppelin",
      "text": "%md\n\nRead more about using JDBC with Zeppelin [here](https://zeppelin.apache.org/docs/0.8.0/interpreter/jdbc.html)\n\nThe following example shows how to do a simple SELECT query on IRIS using JDBC. The data won\u0027t be stored on any python variable though.\n",
      "user": "anonymous",
      "dateUpdated": "Sep 14, 2018 11:43:47 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "title": true,
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eRead more about using JDBC with Zeppelin \u003ca href\u003d\"https://zeppelin.apache.org/docs/0.8.0/interpreter/jdbc.html\"\u003ehere\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe following example shows how to do a simple SELECT query on IRIS using JDBC. The data won\u0026rsquo;t be stored on any python variable though.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536255641818_-463926716",
      "id": "20180906-174041_1235154465",
      "dateCreated": "Sep 6, 2018 5:40:41 PM",
      "dateStarted": "Sep 14, 2018 11:43:47 AM",
      "dateFinished": "Sep 14, 2018 11:43:47 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%irisjdbc\n\nselect * from IRISDemo.products2",
      "user": "anonymous",
      "dateUpdated": "Sep 14, 2018 11:43:51 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Name\niPhone\nPC\nWatch\nPensil\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536247434736_1561903843",
      "id": "20180906-152354_1364086516",
      "dateCreated": "Sep 6, 2018 3:23:54 PM",
      "dateStarted": "Sep 14, 2018 11:43:51 AM",
      "dateFinished": "Sep 14, 2018 11:43:52 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Reading data into a python variable",
      "text": "%md\n\nNow let\u0027s try to read data into a python variable. For that, we need to use Spark.",
      "user": "anonymous",
      "dateUpdated": "Sep 6, 2018 5:51:46 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eNow let\u0026rsquo;s try to read data into a python variable. For that, we need to use Spark.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536247809731_29740657",
      "id": "20180906-153009_1534483196",
      "dateCreated": "Sep 6, 2018 3:30:09 PM",
      "dateStarted": "Sep 6, 2018 5:51:44 PM",
      "dateFinished": "Sep 6, 2018 5:51:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nmy_python_list \u003d spark.read.format(\"iris\").option(\"dbtable\",\"IRISDemo.products2\").load().collect()\n\nfor x in my_python_list:\n  print(x)\n\n",
      "user": "anonymous",
      "dateUpdated": "Sep 14, 2018 11:43:57 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Row(name\u003du\u0027iPhone\u0027)\nRow(name\u003du\u0027PC\u0027)\nRow(name\u003du\u0027Watch\u0027)\nRow(name\u003du\u0027Pensil\u0027)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536247453551_84483391",
      "id": "20180906-152413_2048856726",
      "dateCreated": "Sep 6, 2018 3:24:13 PM",
      "dateStarted": "Sep 14, 2018 11:43:57 AM",
      "dateFinished": "Sep 14, 2018 11:44:17 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nNow you can use Python machine learning libraries on your array. In real use cases, that is not ideal since it will bring ALL your data to your driver node (your PC). But for our purposes, that should work.\n\nWe should try to use Spark fully in the future.",
      "user": "anonymous",
      "dateUpdated": "Sep 6, 2018 5:54:13 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eNow you can use Python machine learning libraries on your array. In real use cases, that is not ideal since it will bring ALL your data to your driver node (your PC). But for our purposes, that should work.\u003c/p\u003e\n\u003cp\u003eWe should try to use Spark fully in the future.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536255574340_-797362806",
      "id": "20180906-173934_1376430896",
      "dateCreated": "Sep 6, 2018 5:39:34 PM",
      "dateStarted": "Sep 6, 2018 5:54:13 PM",
      "dateFinished": "Sep 6, 2018 5:54:13 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nproducts \u003d spark.read.option(\"header\",\"true\").csv(\"products.csv\")\n",
      "user": "anonymous",
      "dateUpdated": "Sep 14, 2018 12:38:10 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-5165314110742673233.py\", line 367, in \u003cmodule\u003e\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-5165314110742673233.py\", line 360, in \u003cmodule\u003e\n    exec(code, _zcUserQueryNameSpace)\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\n  File \"/usr/local/spark/python/pyspark/sql/readwriter.py\", line 380, in csv\n    return self._df(self._jreader.csv(self._spark._sc._jvm.PythonUtils.toSeq(path)))\n  File \"/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py\", line 1133, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/usr/local/spark/python/pyspark/sql/utils.py\", line 69, in deco\n    raise AnalysisException(s.split(\u0027: \u0027, 1)[1], stackTrace)\nAnalysisException: u\u0027Path does not exist: file:/zeppelin/products.csv;\u0027\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1536256453233_885635261",
      "id": "20180906-175413_51388712",
      "dateCreated": "Sep 6, 2018 5:54:13 PM",
      "dateStarted": "Sep 14, 2018 12:38:10 PM",
      "dateFinished": "Sep 14, 2018 12:38:10 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "Sep 14, 2018 11:45:04 AM",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1536925504193_2074503180",
      "id": "20180914-114504_527866740",
      "dateCreated": "Sep 14, 2018 11:45:04 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "NITOR",
  "id": "2DQ8UDFB4",
  "angularObjects": {
    "2DHWQ7A7V:shared_process": [],
    "2DGTFGFBC:shared_process": [],
    "2DHATZD9M:shared_process": [],
    "2DKDARDPF:shared_process": [],
    "2DG8A819A:shared_process": [],
    "2DJVV28U3:shared_process": [],
    "2DKCAA3TS:shared_process": [],
    "2DHEPV9M3:shared_process": [],
    "2DKW8P766:shared_process": [],
    "2DGHX224C:shared_process": [],
    "2DGRSNE7G:shared_process": [],
    "2DGUG4SEP:shared_process": [],
    "2DHM86BYR:shared_process": [],
    "2DHYW1ZN6:shared_process": [],
    "2DJ16C4UE:shared_process": [],
    "2DJ4VH5DW:shared_process": [],
    "2DJBEDGYM:shared_process": [],
    "2DM19CFTF:shared_process": [],
    "2DHHCF91E:shared_process": [],
    "2DKCPR9P1:shared_process": []
  },
  "config": {},
  "info": {}
}
